Mmain	src/main.c	/^int main(int ac, char **av, char **env)$/
__init_cmd	src/parser_one.c	/^void	__init_cmd(t_cmd *cmd)$/
__init_lexer_vars	src/lexer1.c	/^void	__init_lexer_vars(t_lexer *vars, t_token_list/
__init_list	src/lexer_utils.c	/^void	__init_list(t_token_list *lst)$/
__init_parser_vars	src/parser_one.c	/^void	__init_parser_vars(size_t *size, t_list **cmd/
append_to_lst	src/parser_utils.c	/^void	append_to_lst(char ***vector, char *elem, siz/
check_syntax	src/parser.c	/^bool	check_syntax(t_token *t, t_token_list *lst)$/
close_files	src/parser_utils.c	/^void	close_files(t_cmd *cmd)$/
close_old_open_new	src/parser_utils.c	/^int	close_old_open_new(t_cmd *cmd, char *file_name/
create_env	src/parser.c	/^t_list	*create_env(char **env)$/
display_logo	src/main.c	/^void display_logo(void)$/
fill_token	src/lexer_utils.c	/^void	fill_token(t_token *t, char *buffer)$/
get_between_quots	src/lexer1.c	/^void	get_between_quots(t_token_list *lst, t_lexer /
get_data	src/lexer_utils.c	/^void	get_data(char *buffer, int i, t_token **t, in/
get_expanded_values	src/expander.c	/^char *get_expanded_values(char *token, t_list **st/
get_keyword_and_filename	src/lexer1.c	/^void	get_keyword_and_filename(t_token_list *lst, t/
get_nonquoted	src/lexer1.c	/^void	get_nonquoted(t_token_list *lst, t_lexer *var/
get_tokens	src/lexer1.c	/^void	get_tokens(t_token_list *lst, char *text, int/
get_type	src/lexer_utils.c	/^int	get_type(char c, int p)$/
get_value_of_key	src/expander.c	/^char	*get_value_of_key(char *key, t_list *env, int/
heredoc	src/parser_utils.c	/^void	heredoc(char *eof, t_list *env, int quote)$/
is_keyword	src/utils.c	/^int	is_keyword(char c)$/
merge	src/lexer_utils.c	/^bool	merge(char c1, char c2, t_token *t)$/
n_parser	src/parser.c	/^bool	n_parser(t_token_list *lst, t_list **env, cha/
open_file	src/parser_utils.c	/^void	open_file(t_cmd *cmd, t_token *t, char *file_/
parser_one	src/parser_one.c	/^t_list	*parser_one(t_token_list *lst, t_list *env)/
trim_expand_token	src/parser.c	/^void	trim_expand_token(struct s_pvars *vars, t_lis/
wrape_command	src/parser_one.c	/^void	wrape_command(t_list **cmd_lst, t_cmd **cmd, /
wrappup_exapnded_token	src/expander.c	/^char	*wrappup_exapnded_token(t_list *str_lst, int /
